<UserControl x:Class="Hextasy.Yinsh.YinshGameView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Hextasy.Yinsh"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:framework="clr-namespace:Hextasy.Framework;assembly=Hextasy.Framework"
             mc:Ignorable="d" 
             Background="BurlyWood"
             d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <framework:DoubleMultiplierConverter x:Key="DoubleMultiplierConverter"/>
    <Style x:Key="HexagonButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="BorderBrush" Value="Black"/>
      <Setter Property="BorderThickness" Value="29"></Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid>
              <Path Margin="1" x:Name="Path" 
                              StrokeThickness="0"
                              Fill="Gray" Visibility="Visible" RenderTransformOrigin="0.5, 0.5"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                              Height="Auto" Stretch="Fill">
                <Path.Data>
                  <PathGeometry>
                    <PathGeometry.Figures>
                      <PathFigureCollection>
                        <PathFigure IsFilled="False" IsClosed="True" StartPoint="250,0">
                          <PathFigure.Segments>
                            <PathSegmentCollection>
                              <LineSegment Point="750,0" />
                              <LineSegment Point="1000,433" />
                              <LineSegment Point="750,866" />
                              <LineSegment Point="250,866" />
                              <LineSegment Point="0,433" />
                            </PathSegmentCollection>
                          </PathFigure.Segments>
                        </PathFigure>
                        <PathFigure IsFilled="True" IsClosed="True" StartPoint="115,234">
                          <PathFigure.Segments>
                            <PathSegmentCollection>
                              <LineSegment Point="135,199" />
                              <LineSegment Point="885,632" />
                              <LineSegment Point="865,667" />
                            </PathSegmentCollection>
                          </PathFigure.Segments>
                        </PathFigure>
                        <PathFigure IsFilled="True" IsClosed="True" StartPoint="865,199">
                          <PathFigure.Segments>
                            <PathSegmentCollection>
                              <LineSegment Point="885,234" />
                              <LineSegment Point="135,667" />
                              <LineSegment Point="115,632" />
                            </PathSegmentCollection>
                          </PathFigure.Segments>
                        </PathFigure>
                        <PathFigure IsFilled="True" IsClosed="True" StartPoint="480,0">
                          <PathFigure.Segments>
                            <PathSegmentCollection>
                              <LineSegment Point="520,0" />
                              <LineSegment Point="520,866" />
                              <LineSegment Point="480,866" />
                            </PathSegmentCollection>
                          </PathFigure.Segments>
                        </PathFigure>
                      </PathFigureCollection>
                    </PathGeometry.Figures>
                  </PathGeometry>
                </Path.Data>
              </Path>
              <Path Margin="1" Fill="WhiteSmoke" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                    Height="Auto" x:Name="Overlay" Stretch="Fill" Opacity="0"
                    RenderTransformOrigin="0.5, 0.5"
                    Data="M 250,0 L 750,0 L 1000,433 L 750,866 L 250,866 L 0,433 Z">
              </Path>
              <Path Margin="1" Fill="Transparent" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                    Height="Auto" x:Name="ValidTargetIndicator" Stretch="Fill" Opacity="0.3"
                    RenderTransformOrigin="0.5, 0.5"
                    Data="M 250,0 L 750,0 L 1000,433 L 750,866 L 250,866 L 0,433 Z">
              </Path>
              <Ellipse x:Name="Ring" Stroke="White"
                       StrokeThickness="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.08}"
                       Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.96}"
                       Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.96}">
              </Ellipse>
              <Ellipse x:Name="Disc" Stroke="White" Fill="Black"
                       StrokeThickness="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.08}"
                       Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.8}"
                       Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.8}">
              </Ellipse>
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding Ring}" Value="{x:Null}">
                <Setter TargetName="Ring" Property="Opacity" Value="0"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Ring.Color}" Value="White">
                <Setter TargetName="Ring" Property="Stroke" Value="White"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Ring.Color}" Value="Black">
                <Setter TargetName="Ring" Property="Stroke" Value="Black"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Disc}" Value="{x:Null}">
                <Setter TargetName="Disc" Property="Opacity" Value="0"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Disc.Color}" Value="White">
                <Setter TargetName="Disc" Property="Stroke" Value="Black"/>
                <Setter TargetName="Disc" Property="Fill" Value="White"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Disc.Color}" Value="Black">
                <Setter TargetName="Disc" Property="Stroke" Value="White"/>
                <Setter TargetName="Disc" Property="Fill" Value="Black"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Disc.IsSelected}" Value="True">
                <Setter TargetName="Disc" Property="Stroke" Value="GreenYellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter TargetName="Path" Property="Fill" Value="Yellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsValidTarget}" Value="True">
                <Setter TargetName="ValidTargetIndicator" Property="Fill" Value="GreenYellow"/>
              </DataTrigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Overlay" Property="Opacity" Value="0.5"/>
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Overlay" Property="Opacity" Value="0.5"/>
                <Setter TargetName="Overlay" Property="RenderTransform">
                  <Setter.Value>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                  </Setter.Value>
                </Setter>
                <Setter TargetName="Path" Property="RenderTransform">
                  <Setter.Value>
                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                  </Setter.Value>
                </Setter>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:YinshTile}">
      <Button Style="{StaticResource HexagonButtonStyle}"
              Background="DarkGray"
              cal:Message.Attach="ToggleButton($dataContext);[Event MouseEnter] = [Action OnMouseEnter($dataContext)]"/>
    </DataTemplate>

  </UserControl.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <ItemsControl ItemsSource="{Binding Tiles}" HorizontalAlignment="Center" VerticalAlignment="Center">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <framework:HexGrid Columns="{Binding Columns}"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
    <TextBlock Grid.Row="1" Text="{Binding Logic.GameState.Message}" FontSize="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.06}" HorizontalAlignment="Center"/>
  </Grid>

</UserControl>
