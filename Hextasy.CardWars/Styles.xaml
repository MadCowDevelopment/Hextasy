<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Storyboards.xaml"/>
    <ResourceDictionary Source="Converters.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="ListBox" xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.WindowBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FF7F9DB9</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>0,0,0,0</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
      <Setter.Value>
        <x:Static Member="ScrollBarVisibility.Auto" />
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
      <Setter.Value>
        <x:Static Member="ScrollBarVisibility.Auto" />
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment">
      <Setter.Value>
        <x:Static Member="VerticalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBox">
          <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Name="Bd" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Padding="0">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping">
              <Setter Property="ScrollViewer.CanContentScroll">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CardSelectionContainerStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border x:Name="SelectionBorder" Width="350" Height="54" 
                  Background="BurlyWood" CornerRadius="10" BorderBrush="Black" BorderThickness="2"
                   RenderTransformOrigin="0.5, 0.5" Margin="2">
            <Border.RenderTransform>
              <ScaleTransform/>
            </Border.RenderTransform>
            <Grid>
              <ContentPresenter/>
              <Rectangle x:Name="DisabledOverlay" 
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0" Fill="WhiteSmoke"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding CanBePlayed}" Value="False">
              <Setter Property="IsEnabled" Value="False"/>
              <Setter TargetName="DisabledOverlay" Property="Opacity" Value="0.75"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Monster">
              <Setter TargetName="SelectionBorder" Property="Background" Value="BurlyWood"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Spell">
              <Setter TargetName="SelectionBorder" Property="Background" Value="SkyBlue"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform CenterX="185" CenterY="25"/>
                </Setter.Value>
              </Setter>
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation
                              Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                              To="1.04" Duration="0:0:0.12" >
                      </DoubleAnimation>
                      <DoubleAnimation
                              Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                              To="1.04" Duration="0:0:0.12" >
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="SelectionBorder" Property="Background" Value="#FFF79800"/>
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform CenterX="185" CenterY="25"/>
                </Setter.Value>
              </Setter>
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation
                              Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                              To="1.04" Duration="0:0:0.12" >
                      </DoubleAnimation>
                      <DoubleAnimation
                              Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                              To="1.04" Duration="0:0:0.12" >
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation
                              Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                              To="1" Duration="0:0:0.12" >
                      </DoubleAnimation>
                      <DoubleAnimation
                              Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                              To="1" Duration="0:0:0.12" >
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HexagonButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="BorderBrush" Value="Black"/>
    <Setter Property="BorderThickness" Value="29"/>
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Path Margin="1" 
                    StrokeThickness="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Button}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.05}"
                    Stroke="Gray" 
                    Fill="{TemplateBinding Background}" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                    Height="Auto" x:Name="Path" Stretch="Fill"
                    RenderTransformOrigin="0.5, 0.5"
                    Data="M 250,0 L 750,0 L 1000,433 L 750,866 L 250,866 L 0,433 Z">
            </Path>
            <Path Margin="1" 
                    Fill="WhiteSmoke" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                    Height="Auto" x:Name="Overlay" Stretch="Fill" Opacity="0"
                    RenderTransformOrigin="0.5, 0.5"
                    Data="M 250,0 L 750,0 L 1000,433 L 750,866 L 250,866 L 0,433 Z">
            </Path>
            <ContentPresenter />
            <Image x:Name="Crosshair" Stretch="Uniform" 
                     Margin="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Button}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.30}"
                     Source="Images\attack.png" Opacity="0" RenderTransformOrigin="0.5, 0.5">
              <Image.RenderTransform>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1"/>
              </Image.RenderTransform>
            </Image>
            <Image x:Name="Skull" Stretch="Uniform"
                   Margin="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Button}, 
                        Path=ActualHeight, Converter={StaticResource DoubleMultiplierConverter},ConverterParameter=0.20}"
                     Source="Images\skull.png" RenderTransformOrigin="0.5, 0.5">
              <Image.RenderTransform>
                <ScaleTransform ScaleX="0" ScaleY="0"/>
              </Image.RenderTransform>
            </Image>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Owner}" Value="Player1">
              <Setter TargetName="Path" Property="Stroke" Value="Red"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Owner}" Value="Player2">
              <Setter TargetName="Path" Property="Stroke" Value="Blue"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Card.IsExhausted}" Value="False">
              <Setter TargetName="Path" Property="Fill" Value="GreenYellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
              <Setter TargetName="Path" Property="Fill" Value="Orange"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Overlay" Property="Opacity" Value="0.5"/>
            </Trigger>
            <MultiDataTrigger x:Name="CrosshairVisibilityTrigger">
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.IsInTargetMode}"
                             Value="True"/>
                <Condition Binding="{Binding IsValidTarget}" Value="True"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Crosshair" Property="Opacity" Value="1"/>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource CrosshairStoryboard}"/>
              </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Card.IsKilled}" Value="True">
              <DataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource CardKilledStoryboard}"/>
              </DataTrigger.EnterActions>
            </DataTrigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Overlay" Property="Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>